name: Build OpenInDiscord Safari Extension

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      add_extension:
        description: 'Build Safari Extension'
        required: false
        default: true
        type: boolean

jobs:
  build-appex:
    runs-on: macos-15

    steps:
      # Step 1: Check out the repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Set up Xcode 16.1 or later
      - name: Select Xcode Version
        run: |
          # List available Xcode versions
          ls /Applications/ | grep Xcode
          
          # Try to select Xcode 16.1 or the latest available
          if [ -d "/Applications/Xcode_16.1.app" ]; then
            sudo xcode-select -s /Applications/Xcode_16.1.app/Contents/Developer
          elif [ -d "/Applications/Xcode_16.0.app" ]; then
            sudo xcode-select -s /Applications/Xcode_16.0.app/Contents/Developer
          else
            # Use the default Xcode (should be 16.x on macos-15)
            sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
          fi

      # Step 3: Show Xcode and Swift versions
      - name: Show Xcode Version
        run: |
          xcodebuild -version
          swift --version

      # Step 4: Install xcbeautify for better output formatting
      - name: Install xcbeautify
        if: github.event.inputs.add_extension != 'false'
        run: |
          brew install xcbeautify

      # Step 5: Build Safari Extension
      - name: Build Safari Extension
        if: github.event.inputs.add_extension != 'false'
        run: |
          cd OpenInDiscord
          xcodebuild build \
            -target "OpenInDiscord Extension" \
            -configuration Release \
            -sdk iphoneos \
            CONFIGURATION_BUILD_DIR="build" \
            PRODUCT_NAME="OpenInDiscord" \
            PRODUCT_BUNDLE_IDENTIFIER="com.hammerandchisel.discord.OpenInDiscord" \
            PRODUCT_MODULE_NAME="OpenInDiscordExt" \
            SKIP_INSTALL=NO \
            DEVELOPMENT_TEAM="" \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO \
            ONLY_ACTIVE_ARCH=NO | xcbeautify

      # Step 6: Locate and Copy Extension
      - name: Locate and Copy Extension
        if: github.event.inputs.add_extension != 'false'
        run: |
          cd OpenInDiscord
          # Find the built .appex file
          APPEX_PATH=$(find ./build -name "*.appex" -type d | head -1)
          echo "Found extension at: $APPEX_PATH"
          
          # Create output directory
          mkdir -p ../output
          
          # Copy the .appex bundle
          if [ -n "$APPEX_PATH" ]; then
            cp -R "$APPEX_PATH" ../output/
            echo "Extension copied to output directory"
            ls -la ../output/
          else
            echo "Error: Could not find .appex file"
            exit 1
          fi

      # Step 7: Create Extension Archive
      - name: Create Extension Archive
        if: github.event.inputs.add_extension != 'false'
        run: |
          cd ./output
          APPEX_NAME=$(ls *.appex | head -1)
          ARCHIVE_NAME="OpenInDiscord-Extension.zip"
          zip -r "$ARCHIVE_NAME" "$APPEX_NAME"
          echo "Created archive: $ARCHIVE_NAME"
          ls -la

      # Step 8: Upload Extension Artifact
      - name: Upload Extension Artifact
        if: github.event.inputs.add_extension != 'false'
        uses: actions/upload-artifact@v4
        with:
          name: openindiscord-safari-extension
          path: |
            ./output/*.appex
            ./output/*.zip
          if-no-files-found: error

      # Step 9: Build Summary
      - name: Build Summary
        if: github.event.inputs.add_extension != 'false'
        run: |
          echo "=== Build Summary ==="
          echo "âœ… Safari Web Extension built successfully"
          echo "ðŸ“¦ Extension files:"
          find ./output -type f -name "*.appex" -o -name "*.zip" | while read file; do
            echo "   - $(basename "$file") ($(du -h "$file" | cut -f1))"
          done 