name: Build OpenInDiscord Safari Extension

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-appex:
    runs-on: macos-latest
    strategy:
      matrix:
        platform: [iOS, macOS]
        include:
          - platform: iOS
            destination: "generic/platform=iOS"
            output_suffix: "ios"
          - platform: macOS
            destination: "generic/platform=macOS"
            output_suffix: "macos"

    steps:
      # Step 1: Check out the repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Set up Xcode
      - name: Select Xcode Version
        run: sudo xcode-select -s /Applications/Xcode.app/Contents/Developer

      # Step 3: Show Xcode and Swift versions
      - name: Show Xcode Version
        run: |
          xcodebuild -version
          swift --version

      # Step 4: Build the Safari Web Extension (.appex)
      - name: Build Safari Extension for ${{ matrix.platform }}
        run: |
          xcodebuild \
            -project OpenInDiscord.xcodeproj \
            -scheme "OpenInDiscord Extension" \
            -configuration Release \
            -destination "${{ matrix.destination }}" \
            -derivedDataPath ./build \
            clean build \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO

      # Step 5: Find and copy the built .appex file
      - name: Locate and Copy Extension
        run: |
          # Find the built .appex file
          APPEX_PATH=$(find ./build -name "*.appex" -type d | head -1)
          echo "Found extension at: $APPEX_PATH"
          
          # Create output directory
          mkdir -p ./output
          
          # Copy the .appex bundle
          if [ -n "$APPEX_PATH" ]; then
            cp -R "$APPEX_PATH" ./output/
            echo "Extension copied to output directory"
            ls -la ./output/
          else
            echo "Error: Could not find .appex file"
            exit 1
          fi

      # Step 6: Create a zip archive of the extension
      - name: Create Extension Archive
        run: |
          cd ./output
          APPEX_NAME=$(ls *.appex | head -1)
          ARCHIVE_NAME="OpenInDiscord-Extension-${{ matrix.output_suffix }}.zip"
          zip -r "$ARCHIVE_NAME" "$APPEX_NAME"
          echo "Created archive: $ARCHIVE_NAME"
          ls -la

      # Step 7: Upload the extension as an artifact
      - name: Upload Extension Artifact
        uses: actions/upload-artifact@v4
        with:
          name: openindiscord-safari-extension-${{ matrix.output_suffix }}
          path: |
            ./output/*.appex
            ./output/*.zip
          if-no-files-found: error

      # Step 8: Show build summary
      - name: Build Summary
        run: |
          echo "=== Build Summary for ${{ matrix.platform }} ==="
          echo "âœ… Safari Web Extension built successfully"
          echo "ðŸ“¦ Extension files:"
          find ./output -type f -name "*.appex" -o -name "*.zip" | while read file; do
            echo "   - $(basename "$file") ($(du -h "$file" | cut -f1))"
          done 